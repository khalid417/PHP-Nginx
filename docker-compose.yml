version: "3.9"
services:
  nginx:
    build: 
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "8080:80"
    networks:
      - internal
    volumes:
      - ./data/:/var/www/html/
      - ./logs/nginx:/var/log/nginx/
  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - internal
    volumes:
      - ./data/:/var/www/html/
      - ./logs/php.log:/var/log/fpm-php.www.log
      - /var/run/docker.sock:/var/run/docker.sock
  cron:
    build: 
      context: .
      dockerfile: cron/Dockerfile
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ## Server group ##
  server1:
    image: unity.server
    build:
      context: ../../Unity/Lorcana/Build/Linux
      dockerfile: ../../../../Docker/PHP-Nginx/unity/Dockerfile
    ports:
      - "27777:7777"
    networks:
      - internal
  server2:
    image: unity.server
    ports:
      - "27778:7777"
    networks:
      - internal
  server3:
    image: unity.server
    ports:
      - "27779:7777"
    networks:
      - internal
  server4:
    image: unity.server
    ports:
      - "27780:7777"
    networks:
      - internal
  server5:
    image: unity.server
    ports:
      - "27781:7777"
    networks:
      - internal
  server6:
    image: unity.server
    ports:
      - "27782:7777"
    networks:
      - internal
  server7:
    image: unity.server
    ports:
      - "27783:7777"
    networks:
      - internal
  server8:
    image: unity.server
    ports:
      - "27784:7777"
    networks:
      - internal
  postgres:
    build:
      context: .
      dockerfile: postgres/Dockerfile
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks: #
      - internal #
    volumes:
      - ./pgdata:/var/lib/postgresql/data
#  adminer:
#    image: adminer
#    ports: 
#      - 8081:8080
networks:
  internal:
    driver: bridge